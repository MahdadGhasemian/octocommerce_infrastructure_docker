version: '3.8'

services:
  nginx:
    image: {{ nginx_image }}
    container_name: {{ nginx_container_name }}
    restart: always
    volumes:
      - "{{ nginx_conf_path }}:/etc/nginx/conf.d/default.conf:ro"
      - "{{ nginx_ssl_certificate }}:/etc/nginx/ssl/ssl_certificate.crt:ro"
      - "{{ nginx_ssl_certificate_key }}:/etc/nginx/ssl/ssl_certificate.key:ro"
      - "{{ redis_inside_auth_htpasswd }}:/etc/nginx/.htpasswd:ro"
    ports:
      - "{{ nginx_http_port }}:80"
      - "{{ nginx_https_port }}:443"
    depends_on:
      - pgadmin4
      - rabbitmq
      - redis-insight
      - minio

  postgres:
    image: {{ postgres_image }}
    container_name: {{ postgres_container_name }}
    restart: always
    environment:
      POSTGRES_DB: {{ postgres_db }}
      POSTGRES_USER: {{ postgres_user }}
      POSTGRES_PASSWORD: {{ postgres_password }}
    volumes:
      - "{{ postgres_volume_name }}:/var/lib/postgresql/data"
{% if postgres_port %}
    ports:
      - "{{ postgres_port }}:{{ postgres_container_port }}"
{% endif %}
  
  pgadmin4:
    image: {{ pgadmin_image }}
    container_name: {{ pgadmin_container_name }}
    restart: always
    environment:
      PGADMIN_LISTEN_PORT: {{ pgadmin_container_port }}
      PGADMIN_DEFAULT_EMAIL: {{ pgadmin_user }}
      PGADMIN_DEFAULT_PASSWORD: {{ pgadmin_password }}
      PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT: 'False'
      PGADMIN_CONFIG_WTF_CSRF_ENABLED: 'False'
    volumes:
      - "{{ pgadmin_volume_name }}:/var/lib/pgadmin"
{% if pgadmin_port %}
    ports:
      - "{{ pgadmin_port }}:{{ pgadmin_container_port }}"
{% endif %}
    depends_on:
      - postgres
  
  rabbitmq:
    image: {{ rabbitmq_image }}
    container_name: {{ rabbitmq_container_name }}
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: {{ rabbitmq_user }}
      RABBITMQ_DEFAULT_PASS: {{ rabbitmq_password }}
    volumes:
      - "{{ rabbitmq_volume_name }}:/var/lib/rabbitmq"
{% if rabbitmq_port %}
    ports:
      - "{{ rabbitmq_port }}:{{ rabbitmq_container_port }}"
{% endif %}
  
  redis:
    image: {{ redis_image }}
    container_name: {{ redis_container_name }}
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: no
      REDIS_PASSWORD: {{ redis_password }}
    volumes:
      - "{{ redis_volume_name }}:/data"
{% if redis_port %}
    ports:
      - "{{ redis_port }}:{{ redis_container_port }}"
{% endif %}

  redis-insight:
    image: {{ redis_insight_image }}
    container_name: {{ redis_insight_container_name }}
    restart: always
    volumes:
      - "{{ redis_insight_volume_name }}:/data"
{% if redis_insight_port %}
    ports:
      - "{{ redis_insight_port }}:{{ redis_insight_container_port }}"
{% endif %}
  
  minio:
    image: {{ minio_image }}
    container_name: {{ minio_container_name }}
    restart: always
    environment:
      MINIO_ROOT_USER: {{ minio_root_user }}
      MINIO_ROOT_PASSWORD: {{ minio_root_password }}
    volumes:
      - "{{ minio_volume_name }}:/bitnami/minio/data"
{% if minio_server_port or minio_console_port %}
    ports:
{% if minio_server_port %}
      - "{{ minio_server_port }}:{{ minio_server_container_port }}"
{% endif %}
{% if minio_console_port %}
      - "{{ minio_console_port }}:{{ minio_console_container_port }}"
{% endif %}
{% endif %}

volumes:
  {{ postgres_volume_name }}:
  {{ rabbitmq_volume_name }}:
  {{ pgadmin_volume_name }}:
  {{ redis_volume_name }}:
  {{ redis_insight_volume_name }}:
  {{ minio_volume_name }}:
